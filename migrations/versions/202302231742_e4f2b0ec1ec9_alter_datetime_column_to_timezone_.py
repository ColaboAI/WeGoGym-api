"""Alter DateTime column to timezone awarable

Revision ID: e4f2b0ec1ec9
Revises: 5fb8af2a1d70
Create Date: 2023-02-23 17:42:52.509805

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import app.models.guid

# revision identifiers, used by Alembic.
revision = "e4f2b0ec1ec9"
down_revision = "5fb8af2a1d70"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "chat_room", sa.Column("admin_user_id", app.models.guid.GUID(), nullable=True)
    )
    op.alter_column(
        "chat_room",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "chat_room",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.create_foreign_key(
        op.f("fk_chat_room_admin_user_id_user"),
        "chat_room",
        "user",
        ["admin_user_id"],
        ["id"],
        ondelete="SET NULL",
    )
    op.alter_column(
        "chat_room_member",
        "left_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=True,
    )
    op.alter_column(
        "chat_room_member",
        "last_read_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "chat_room_member",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "chat_room_member",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "gym_info",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "gym_info",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "message",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "message",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "user",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "user",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "workout_participant",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "workout_participant",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "workout_promise",
        "recruit_end_time",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=True,
    )
    op.alter_column(
        "workout_promise",
        "promise_time",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=True,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "workout_promise",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "workout_promise",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.DateTime(timezone=True),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "workout_promise",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "workout_promise",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "workout_promise",
        "promise_time",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=True,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "workout_promise",
        "recruit_end_time",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=True,
    )
    op.alter_column(
        "workout_participant",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "workout_participant",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "user",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "user",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "message",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "message",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "gym_info",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "gym_info",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "chat_room_member",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "chat_room_member",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "chat_room_member",
        "last_read_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "chat_room_member",
        "left_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=True,
    )
    op.drop_constraint(
        op.f("fk_chat_room_admin_user_id_user"), "chat_room", type_="foreignkey"
    )
    op.alter_column(
        "chat_room",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.alter_column(
        "chat_room",
        "created_at",
        existing_type=sa.DateTime(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"),
    )
    op.drop_column("chat_room", "admin_user_id")
    # ### end Alembic commands ###
